{"version":3,"sources":["webpack:///./src/script.js"],"names":["getRandomArbitrary","min","max","Math","random","constructor","this","canvas","document","getElementById","dpr","window","devicePixelRatio","ctx","getContext","scale","art","Image","crossOrigin","artSrc","particles","particleIds","setCanvasSize","width","innerWidth","height","innerHeight","style","createParticles","drawImage","artData","getImageData","y","x","data","id","replace","c","r","toString","color","particle","size","Object","assign","push","drawParticles","map","posX","posY","beginPath","arc","PI","fillStyle","fill","render","onload","src"],"mappings":"mBAEA,MAIMA,EAAqB,CAACC,EAAKC,IACxBC,KAAKC,UAAYF,EAAMD,GAAOA,GAmGnB,IA/EpB,MACEI,cACEC,KAAKC,OAASC,SAASC,eAAe,UAEtCH,KAAKI,IAAMC,OAAOC,kBAAoB,EAEtCN,KAAKO,IAAMP,KAAKC,OAAOO,WAAW,MAClCR,KAAKO,IAAIE,MAAMT,KAAKI,IAAKJ,KAAKI,KAE9BJ,KAAKU,IAAM,IAAIC,MACfX,KAAKU,IAAIE,YAAc,YACvBZ,KAAKa,OApCG,6DAsCRb,KAAKc,UAAY,GACjBd,KAAKe,YAAc,GAEnBf,KAAKgB,gBAGPA,gBACEhB,KAAKC,OAAOgB,MAAQZ,OAAOa,WAAalB,KAAKI,IAC7CJ,KAAKC,OAAOkB,OAASd,OAAOe,YAAcpB,KAAKI,IAE/CJ,KAAKC,OAAOoB,MAAMJ,MAAQZ,OAAOa,WAAa,KAC9ClB,KAAKC,OAAOoB,MAAMF,OAASd,OAAOe,YAAc,KAGlDE,kBACEtB,KAAKO,IAAIgB,UAAUvB,KAAKU,IAAK,EAAG,GAEhC,MAAMc,EAAUxB,KAAKO,IAAIkB,aAAa,EAAG,EAAGzB,KAAKU,IAAIO,MAAOjB,KAAKU,IAAIS,QAErE,IAAK,IAAIO,EAAI,EAAGA,EAAIF,EAAQL,OAAQO,IAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQP,MAAOU,IACjC,GAAIH,EAAQI,KAAU,EAAJF,EAAQF,EAAQP,MAAc,EAAJU,EAAS,GAAK,KAAOjC,EAAmB,EAAG,KAzDhF,GAyDgG,CACrG,MAAMmC,EA1CP,uCAAuCC,QAAQ,SAAS,SAAUC,GACvE,MAAMC,EAAoB,GAAhBnC,KAAKC,SAAgB,EAC/B,OAD2C,KAALiC,EAAWC,EAAS,EAAJA,EAAU,GACvDC,SAAS,OAyCNC,EA/CN,QALGxC,EAAmB,EAAG,SACtBA,EAAmB,EAAG,UACtBA,EAAmB,EAAG,UACtBA,EAAmB,EAAG,OAoDnByC,EAAW,CACf,CAACN,GAAK,CACJF,IACAD,IACAU,KANS1C,EAAmB,EAAG,GAO/BwC,UAGJG,OAAOC,OAAOtC,KAAKc,UAAWqB,GAC9BnC,KAAKe,YAAYwB,KAAKV,IAO9BW,gBACExC,KAAKe,YAAY0B,KAAIZ,IACnB,MAAMM,EAAWnC,KAAKc,UAAUe,GAE1Ba,EAAQrC,OAAOa,WAAa,EAAMlB,KAAKU,IAAIO,MAAQ,EAAKkB,EAASR,EACjEgB,EAAQtC,OAAOe,YAAc,EAAMpB,KAAKU,IAAIS,OAAS,EAAKgB,EAAST,EAEzE1B,KAAKO,IAAIqC,YACT5C,KAAKO,IAAIsC,IAAIH,EAAO1C,KAAKI,IAAKuC,EAAO3C,KAAKI,IAAK+B,EAASC,KAAOpC,KAAKI,IAAK,EAAG,EAAIP,KAAKiD,IACrF9C,KAAKO,IAAIwC,UAAYZ,EAASD,MAC9BlC,KAAKO,IAAIyC,UAIbC,SACEjD,KAAKU,IAAIwC,OAAS,KAEhBlD,KAAKsB,kBACLtB,KAAKwC,iBAEPxC,KAAKU,IAAIyC,IAAMnD,KAAKa,UAKZoC,U","file":"bundle.cfa1432ce889fc49fb6c.js","sourcesContent":["import './style.scss'\r\n\r\nconst IMG = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/204808/mj.png';\r\n\r\nconst AMOUNT = 50; // max: 1000\r\n\r\nconst getRandomArbitrary = (min, max) => {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nconst getRandomColor = () => {\r\n  const ch = getRandomArbitrary(0, 360);\r\n  const cs = getRandomArbitrary(0, 100);\r\n  const cl = getRandomArbitrary(0, 100);\r\n  const ca = getRandomArbitrary(0, 0.7);\r\n\r\n  return `hsla(${ch}, ${cs}%, ${cl}%, ${ca})`;\r\n}\r\n\r\nconst uuidv4 = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n\r\nclass ParticleArt {\r\n  constructor() {\r\n    this.canvas = document.getElementById('canvas')\r\n\r\n    this.dpr = window.devicePixelRatio || 1;\r\n\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.ctx.scale(this.dpr, this.dpr);\r\n\r\n    this.art = new Image();\r\n    this.art.crossOrigin = \"Anonymous\";\r\n    this.artSrc = IMG;\r\n\r\n    this.particles = {};\r\n    this.particleIds = [];\r\n\r\n    this.setCanvasSize();\r\n  }\r\n\r\n  setCanvasSize() {\r\n    this.canvas.width = window.innerWidth * this.dpr;\r\n    this.canvas.height = window.innerHeight * this.dpr;\r\n\r\n    this.canvas.style.width = window.innerWidth + 'px';\r\n    this.canvas.style.height = window.innerHeight + 'px';\r\n  }\r\n\r\n  createParticles() {\r\n    this.ctx.drawImage(this.art, 0, 0);\r\n\r\n    const artData = this.ctx.getImageData(0, 0, this.art.width, this.art.height);\r\n\r\n    for (let y = 0; y < artData.height; y++) {\r\n      for (let x = 0; x < artData.width; x++) {\r\n        if (artData.data[(y * 4 * artData.width) + (x * 4) + 3] > 128 && getRandomArbitrary(1, 1000) < AMOUNT) {\r\n          const id = uuidv4();\r\n          const color = getRandomColor();\r\n          const size = getRandomArbitrary(1, 5);\r\n\r\n          const particle = {\r\n            [id]: {\r\n              x,\r\n              y,\r\n              size,\r\n              color\r\n            }\r\n          }\r\n          Object.assign(this.particles, particle);\r\n          this.particleIds.push(id);\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  drawParticles() {\r\n    this.particleIds.map(id => {\r\n      const particle = this.particles[id];\r\n\r\n      const posX = (window.innerWidth / 2) - (this.art.width / 2) + particle.x;\r\n      const posY = (window.innerHeight / 2) - (this.art.height / 2) + particle.y;\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(posX * this.dpr, posY * this.dpr, particle.size * this.dpr, 0, 2 * Math.PI);\r\n      this.ctx.fillStyle = particle.color;\r\n      this.ctx.fill();\r\n    })\r\n  }\r\n\r\n  render() {\r\n    this.art.onload = () => {\r\n\r\n      this.createParticles();\r\n      this.drawParticles();\r\n    }\r\n    this.art.src = this.artSrc;\r\n  }\r\n}\r\n\r\nconst particleArt = new ParticleArt();\r\nparticleArt.render();"],"sourceRoot":""}